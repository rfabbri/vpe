#include <bvxm/pro/bvxm_processes.h>
#include <bvxm/pro/bvxm_register.h>

#include <bvxm/pro/processes/bvxm_atmospheric_corr_process.h>
#include <bvxm/pro/processes/bvxm_change_detection_display_process.h>
#include <bvxm/pro/processes/bvxm_clean_world_process.h>
#include <bvxm/pro/processes/bvxm_compare_3d_voxels_process.h>
#include <bvxm/pro/processes/bvxm_compare_rpc_process.h>
#include <bvxm/pro/processes/bvxm_create_local_rpc_process.h>
#include <bvxm/pro/processes/bvxm_create_mog_image_process.h>
#include <bvxm/pro/processes/bvxm_create_normalized_image_process.h>
#include <bvxm/pro/processes/bvxm_create_synth_lidar_data_process.h>
#include <bvxm/pro/processes/bvxm_create_voxel_world_process.h>
#include <bvxm/pro/processes/bvxm_detect_changes_process.h>
#include <bvxm/pro/processes/bvxm_detect_edge_tangent_process.h>
#include <bvxm/pro/processes/bvxm_detect_scale_process.h>
#include <bvxm/pro/processes/bvxm_display_edge_tangent_world_vrml_process.h>
#include <bvxm/pro/processes/bvxm_estimate_camera_process.h>
#include <bvxm/pro/processes/bvxm_estimate_camera_utils.h>
#include <bvxm/pro/processes/bvxm_expected_edge_functor.h>
#include <bvxm/pro/processes/bvxm_expected_edge_image_process.h>
#include <bvxm/pro/processes/bvxm_gen_synthetic_world_process.h>
#include <bvxm/pro/processes/bvxm_get_grid_process.h>
#include <bvxm/pro/processes/bvxm_heightmap_ortho_process.h>
#include <bvxm/pro/processes/bvxm_heightmap_process.h>
#include <bvxm/pro/processes/bvxm_illum_index_process.h>
#include <bvxm/pro/processes/bvxm_lidar_edge_detection_process.h>
#include <bvxm/pro/processes/bvxm_lidar_init_process.h>
#include <bvxm/pro/processes/bvxm_locate_region_process.h>
#include <bvxm/pro/processes/bvxm_normalization_util.h>
#include <bvxm/pro/processes/bvxm_normalize_image_process.h>
#include <bvxm/pro/processes/bvxm_ocp_compare_process.h>
#include <bvxm/pro/processes/bvxm_ocp_hist_process.h>
#include <bvxm/pro/processes/bvxm_pmap_hist_process.h>
#include <bvxm/pro/processes/bvxm_pmap_ratio_process.h>
#include <bvxm/pro/processes/bvxm_render_expected_image_process.h>
#include <bvxm/pro/processes/bvxm_render_virtual_view_process.h>
#include <bvxm/pro/processes/bvxm_report_statistics_point_cloud_process.h>
#include <bvxm/pro/processes/bvxm_roc_process.h>
#include <bvxm/pro/processes/bvxm_roi_init_process.h>
#include <bvxm/pro/processes/bvxm_rpc_registration_process.h>
#include <bvxm/pro/processes/bvxm_save_edges_raw_process.h>
#include <bvxm/pro/processes/bvxm_save_occupancy_raw_process.h>
#include <bvxm/pro/processes/bvxm_save_occupancy_vff_process.h>
#include <bvxm/pro/processes/bvxm_synth_world_generator.h>
#include <bvxm/pro/processes/bvxm_update_edge_tangent_process.h>
#include <bvxm/pro/processes/bvxm_update_edges_lidar_process.h>
#include <bvxm/pro/processes/bvxm_update_edges_process.h>
#include <bvxm/pro/processes/bvxm_update_lidar_process.h>
#include <bvxm/pro/processes/bvxm_update_point_cloud_process.h>
#include <bvxm/pro/processes/bvxm_update_process.h>

int main() { return 0; }
