#include <clsfy/clsfy_adaboost_sorted_builder.h>
#include <clsfy/clsfy_adaboost_trainer.h>
#include <clsfy/clsfy_add_all_loaders.h>
#include <clsfy/clsfy_binary_1d_wrapper.h>
#include <clsfy/clsfy_binary_1d_wrapper_builder.h>
#include <clsfy/clsfy_binary_hyperplane.h>
#include <clsfy/clsfy_binary_hyperplane_gmrho_builder.h>
#include <clsfy/clsfy_binary_hyperplane_logit_builder.h>
#include <clsfy/clsfy_binary_hyperplane_ls_builder.h>
#include <clsfy/clsfy_binary_pdf_classifier.h>
#include <clsfy/clsfy_binary_threshold_1d.h>
#include <clsfy/clsfy_binary_threshold_1d_builder.h>
#include <clsfy/clsfy_binary_threshold_1d_gini_builder.h>
#include <clsfy/clsfy_builder_1d.h>
#include <clsfy/clsfy_builder_base.h>
#include <clsfy/clsfy_classifier_1d.h>
#include <clsfy/clsfy_classifier_base.h>
#include <clsfy/clsfy_direct_boost.h>
#include <clsfy/clsfy_direct_boost_builder.h>
#include <clsfy/clsfy_k_nearest_neighbour.h>
#include <clsfy/clsfy_knn_builder.h>
#include <clsfy/clsfy_logit_loss_function.h>
#include <clsfy/clsfy_mean_square_1d.h>
#include <clsfy/clsfy_mean_square_1d_builder.h>
#include <clsfy/clsfy_null_builder.h>
#include <clsfy/clsfy_null_classifier.h>
#include <clsfy/clsfy_parzen_builder.h>
#include <clsfy/clsfy_random_builder.h>
#include <clsfy/clsfy_random_classifier.h>
#include <clsfy/clsfy_random_forest.h>
#include <clsfy/clsfy_random_forest_builder.h>
#include <clsfy/clsfy_rbf_parzen.h>
#include <clsfy/clsfy_rbf_svm.h>
#include <clsfy/clsfy_rbf_svm_smo_1_builder.h>
#include <clsfy/clsfy_simple_adaboost.h>
#include <clsfy/clsfy_smo_1.h>
#include <clsfy/clsfy_smo_base.h>
#include <clsfy/clsfy_binary_tree.h>
#include <clsfy/clsfy_binary_tree_builder.h>

int main() { return 0; }
